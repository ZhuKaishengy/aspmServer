<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aisino.db2.dao.VerifiedInvoiceDetailMapper">
  <resultMap id="BaseResultMap" type="com.aisino.db2.domain.VerifiedInvoiceDetail">
    <id column="InvoiceCode" jdbcType="VARCHAR" property="invoicecode" />
    <id column="InvoiceNumber" jdbcType="CHAR" property="invoicenumber" />
    <id column="DetailIndex" jdbcType="INTEGER" property="detailindex" />
    <id column="IsListItem" jdbcType="BIT" property="islistitem" />
    <result column="Name" jdbcType="NVARCHAR" property="name" />
    <result column="Standard" jdbcType="NVARCHAR" property="standard" />
    <result column="Unit" jdbcType="NVARCHAR" property="unit" />
    <result column="Quantity" jdbcType="DECIMAL" property="quantity" />
    <result column="UnitPrice" jdbcType="DECIMAL" property="unitprice" />
    <result column="TotalPrice" jdbcType="DECIMAL" property="totalprice" />
    <result column="TaxRate" jdbcType="DECIMAL" property="taxrate" />
    <result column="Tax" jdbcType="DECIMAL" property="tax" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    InvoiceCode, InvoiceNumber, DetailIndex, IsListItem, Name, Standard, Unit, Quantity, 
    UnitPrice, TotalPrice, TaxRate, Tax
  </sql>
  <select id="selectByExample" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from VerifiedInvoiceDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetailKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from VerifiedInvoiceDetail
    where InvoiceCode = #{invoicecode,jdbcType=VARCHAR}
      and InvoiceNumber = #{invoicenumber,jdbcType=CHAR}
      and DetailIndex = #{detailindex,jdbcType=INTEGER}
      and IsListItem = #{islistitem,jdbcType=BIT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetailKey">
    delete from VerifiedInvoiceDetail
    where InvoiceCode = #{invoicecode,jdbcType=VARCHAR}
      and InvoiceNumber = #{invoicenumber,jdbcType=CHAR}
      and DetailIndex = #{detailindex,jdbcType=INTEGER}
      and IsListItem = #{islistitem,jdbcType=BIT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetailExample">
    delete from VerifiedInvoiceDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetail">
    insert into VerifiedInvoiceDetail (InvoiceCode, InvoiceNumber, DetailIndex, 
      IsListItem, Name, Standard, 
      Unit, Quantity, UnitPrice, 
      TotalPrice, TaxRate, Tax
      )
    values (#{invoicecode,jdbcType=VARCHAR}, #{invoicenumber,jdbcType=CHAR}, #{detailindex,jdbcType=INTEGER}, 
      #{islistitem,jdbcType=BIT}, #{name,jdbcType=NVARCHAR}, #{standard,jdbcType=NVARCHAR}, 
      #{unit,jdbcType=NVARCHAR}, #{quantity,jdbcType=DECIMAL}, #{unitprice,jdbcType=DECIMAL}, 
      #{totalprice,jdbcType=DECIMAL}, #{taxrate,jdbcType=DECIMAL}, #{tax,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetail">
    insert into VerifiedInvoiceDetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoicecode != null">
        InvoiceCode,
      </if>
      <if test="invoicenumber != null">
        InvoiceNumber,
      </if>
      <if test="detailindex != null">
        DetailIndex,
      </if>
      <if test="islistitem != null">
        IsListItem,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="standard != null">
        Standard,
      </if>
      <if test="unit != null">
        Unit,
      </if>
      <if test="quantity != null">
        Quantity,
      </if>
      <if test="unitprice != null">
        UnitPrice,
      </if>
      <if test="totalprice != null">
        TotalPrice,
      </if>
      <if test="taxrate != null">
        TaxRate,
      </if>
      <if test="tax != null">
        Tax,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoicecode != null">
        #{invoicecode,jdbcType=VARCHAR},
      </if>
      <if test="invoicenumber != null">
        #{invoicenumber,jdbcType=CHAR},
      </if>
      <if test="detailindex != null">
        #{detailindex,jdbcType=INTEGER},
      </if>
      <if test="islistitem != null">
        #{islistitem,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="standard != null">
        #{standard,jdbcType=NVARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=NVARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="unitprice != null">
        #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="taxrate != null">
        #{taxrate,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetailExample" resultType="java.lang.Long">
    select count(*) from VerifiedInvoiceDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update VerifiedInvoiceDetail
    <set>
      <if test="record.invoicecode != null">
        InvoiceCode = #{record.invoicecode,jdbcType=VARCHAR},
      </if>
      <if test="record.invoicenumber != null">
        InvoiceNumber = #{record.invoicenumber,jdbcType=CHAR},
      </if>
      <if test="record.detailindex != null">
        DetailIndex = #{record.detailindex,jdbcType=INTEGER},
      </if>
      <if test="record.islistitem != null">
        IsListItem = #{record.islistitem,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=NVARCHAR},
      </if>
      <if test="record.standard != null">
        Standard = #{record.standard,jdbcType=NVARCHAR},
      </if>
      <if test="record.unit != null">
        Unit = #{record.unit,jdbcType=NVARCHAR},
      </if>
      <if test="record.quantity != null">
        Quantity = #{record.quantity,jdbcType=DECIMAL},
      </if>
      <if test="record.unitprice != null">
        UnitPrice = #{record.unitprice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalprice != null">
        TotalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.taxrate != null">
        TaxRate = #{record.taxrate,jdbcType=DECIMAL},
      </if>
      <if test="record.tax != null">
        Tax = #{record.tax,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update VerifiedInvoiceDetail
    set InvoiceCode = #{record.invoicecode,jdbcType=VARCHAR},
      InvoiceNumber = #{record.invoicenumber,jdbcType=CHAR},
      DetailIndex = #{record.detailindex,jdbcType=INTEGER},
      IsListItem = #{record.islistitem,jdbcType=BIT},
      Name = #{record.name,jdbcType=NVARCHAR},
      Standard = #{record.standard,jdbcType=NVARCHAR},
      Unit = #{record.unit,jdbcType=NVARCHAR},
      Quantity = #{record.quantity,jdbcType=DECIMAL},
      UnitPrice = #{record.unitprice,jdbcType=DECIMAL},
      TotalPrice = #{record.totalprice,jdbcType=DECIMAL},
      TaxRate = #{record.taxrate,jdbcType=DECIMAL},
      Tax = #{record.tax,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetail">
    update VerifiedInvoiceDetail
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="standard != null">
        Standard = #{standard,jdbcType=NVARCHAR},
      </if>
      <if test="unit != null">
        Unit = #{unit,jdbcType=NVARCHAR},
      </if>
      <if test="quantity != null">
        Quantity = #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="unitprice != null">
        UnitPrice = #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        TotalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="taxrate != null">
        TaxRate = #{taxrate,jdbcType=DECIMAL},
      </if>
      <if test="tax != null">
        Tax = #{tax,jdbcType=DECIMAL},
      </if>
    </set>
    where InvoiceCode = #{invoicecode,jdbcType=VARCHAR}
      and InvoiceNumber = #{invoicenumber,jdbcType=CHAR}
      and DetailIndex = #{detailindex,jdbcType=INTEGER}
      and IsListItem = #{islistitem,jdbcType=BIT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aisino.db2.domain.VerifiedInvoiceDetail">
    update VerifiedInvoiceDetail
    set Name = #{name,jdbcType=NVARCHAR},
      Standard = #{standard,jdbcType=NVARCHAR},
      Unit = #{unit,jdbcType=NVARCHAR},
      Quantity = #{quantity,jdbcType=DECIMAL},
      UnitPrice = #{unitprice,jdbcType=DECIMAL},
      TotalPrice = #{totalprice,jdbcType=DECIMAL},
      TaxRate = #{taxrate,jdbcType=DECIMAL},
      Tax = #{tax,jdbcType=DECIMAL}
    where InvoiceCode = #{invoicecode,jdbcType=VARCHAR}
      and InvoiceNumber = #{invoicenumber,jdbcType=CHAR}
      and DetailIndex = #{detailindex,jdbcType=INTEGER}
      and IsListItem = #{islistitem,jdbcType=BIT}
  </update>
</mapper>